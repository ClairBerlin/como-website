import{u as f,al as w,Q as b,R as v,C as j,c as n,o as x,f as R,b as y,g as I,d as B}from"./vendor.bfb30425.js";import{_ as h}from"./RoomForm.87d59a45.js";import"./TextInput.9e767deb.js";import"./camelCase.8cdf0679.js";import"./SubmitButton.46db78ca.js";const S={class:"mt-8 max-w-sm sm:max-w-lg"},k={class:"rounded-sm bg-white p-6 shadow-md"},q={setup(C){const t=f(),c=w(),m=b(),d=v(),{t:u}=j(),o=n(()=>m.params.siteId),i=n(()=>t.getters["nav/isOwner"]),p=async({name:a,description:r,size:e,height:s,capacity:l})=>{const _={_jv:{type:"Room",relationships:{site:{data:{type:"Site",id:o.value}}}},name:a,description:r,size_sqm:(e==null?void 0:e.replace(",","."))||void 0,height_m:(s==null?void 0:s.replace(",","."))||void 0,max_occupancy:l||void 0};try{await t.dispatch("jv/post",[_,{url:"rooms/"}]),d.push({name:"site",params:{siteId:o.value}})}catch{c.error(u("room.createError"))}};return(a,r)=>(x(),R("div",S,[y("div",k,[I(h,{"allow-edit":B(i),"button-text":"room.add","on-submit":p},null,8,["allow-edit"])])]))}};export{q as default};
